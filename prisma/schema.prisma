// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  Folder   Folder[]
  File     File[]
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  createdBy   User @relation(fields: [createdById], references: [id])
  createdById Int

  parentFolder   Folder? @relation("Subfolders", fields: [parentFolderId], references: [id])
  parentFolderId String?

  subfolders Folder[] @relation("Subfolders")

  files File[]

  isShared    Boolean   @default(false)
  sharedUntil DateTime?
}

model File {
  id         String   @id @default(uuid())
  name       String
  size       Int
  url        String
  mimeType   String
  uploadedAt DateTime @default(now())

  uploadedBy   User @relation(fields: [uploadedById], references: [id], onDelete: Cascade)
  uploadedById Int

  folder   Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId String

  isShared    Boolean   @default(false)
  sharedUntil DateTime?

  @@index([folderId])
  @@index([uploadedById])
}
